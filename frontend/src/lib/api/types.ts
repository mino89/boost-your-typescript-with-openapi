/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/pets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all pets */
        get: operations["PetsController_findAll"];
        put?: never;
        /** Create a pet */
        post: operations["PetsController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pets/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Info for a specific pet */
        get: operations["PetsController_findOne"];
        /** Update a pet */
        put: operations["PetsController_update"];
        post?: never;
        /** Delete a pet */
        delete: operations["PetsController_remove"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Pet: {
            /**
             * @description The unique identifier of the pet
             * @example 1
             */
            id: number;
            /**
             * @description The name of the pet
             * @example Fluffy
             */
            name: string;
            /**
             * @description The species of the pet
             * @example Dog
             */
            species: string;
            /**
             * @description The age of the pet in years
             * @example 3
             */
            age: number;
            /**
             * @description Optional description of the pet
             * @example A friendly golden retriever
             */
            description?: string;
        };
        CreatePetDto: {
            /**
             * @description The name of the pet
             * @example Fluffy
             */
            name: string;
            /**
             * @description The species of the pet
             * @example Dog
             */
            species: string;
            /**
             * @description The age of the pet in years
             * @example 3
             */
            age: number;
            /**
             * @description Optional description of the pet
             * @example A friendly golden retriever
             */
            description?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    PetsController_findAll: {
        parameters: {
            query?: {
                /** @description How many items to return at one time (max 100) */
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A paged array of pets */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Pet"][];
                };
            };
        };
    };
    PetsController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreatePetDto"];
            };
        };
        responses: {
            /** @description Pet created successfully */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Pet"];
                };
            };
        };
    };
    PetsController_findOne: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The id of the pet to retrieve */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Expected response to a valid request */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Pet"];
                };
            };
            /** @description Pet not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    PetsController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The id of the pet to update */
                id: number;
            };
            cookie?: never;
        };
        /** @description Updated pet data */
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreatePetDto"];
            };
        };
        responses: {
            /** @description Pet updated successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Pet"];
                };
            };
            /** @description Pet not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    PetsController_remove: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The id of the pet to delete */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Pet deleted successfully */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Pet not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
